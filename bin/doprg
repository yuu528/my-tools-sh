#!/bin/bash

# const
NAME='doprg'
declare -A CMD_COMP=(
	['java']="javac -d %1 %2"
	['c']="gcc -o %1/\$(rmext \$(basename %2)) %2"
	['python']="true"
)
declare -A CMD_RUN=(
	['java']="java -classpath %1 \$(rmext %2)"
	['c']="%1/\$(rmext \$(basename %2))"
	['python']="python %2"
)

# flag, opt
norun=0
quiet=0
input=''
output=$(mktemp -d /tmp/doprg-XXXXXX)
outtmp=1

# func
function helpmsg() { # echo help
	cat <<EOS
Usage: $NAME [options] <file>

Options:
	-o, --output=FILE   : the compiled file will be saved to FILE
	-n, --norun         : compiling only; the output will be saved in current directory or specified by -o
	-q, --quiet         : quiet (no output progress messages)
	-h, --help          : show this help

About: $NAME, my-tools-sh by yuu528
EOS
}

function endscript() { # exit with cleaning up temp file, args: exit code
	[ $outtmp -eq 1 ] && rm -r $output
	exit $1
}

function run() { # compile and run, args: language
	[ $quiet -eq 0 ] && echo 'Compiling...' >&2
	if ! eval $(echo ${CMD_COMP[$1]} | sed -e "s#%1#$output#g" -e "s#%2#$input#g"); then
		[ $quiet -eq 0 ] && echo 'Compiling failed.' >&2
		endscript 1
	fi
	[ $quiet -eq 0 ] && echo 'Compiling completed.' >&2

	if [ $norun -eq 0 ]; then
		[ $quiet -eq 0 ] && echo 'Running...' >&2
		eval $(echo ${CMD_RUN[$1]} | sed -e "s#%1#$output#g" -e "s#%2#$input#g")
	fi
}

function rmext() { # remove extention from filename, args: filename
	echo $1 | sed 's/\..\+$//'
}

# main
# parse options
ARGS=$(getopt -o 'o:nqh' -l 'output:,norun,quiet,help' -- "$@") || endscript 1
eval "set -- $ARGS"

while [ $# -gt 0 ]; do
	case $1 in
		-o | --output) rmdir $output; outtmp=0; output=$(realpath "$2"); shift 2;;
		-q | --quiet) quiet=1; shift;;
		-n | --norun) norun=1; shift;;
		-h | --help) helpmsg; endscript 0;;
		--) shift; break;;
	esac
done

# check input file
if [ -z "$1" ]; then
	[ $quiet -eq 0 ] && echo "$NAME: missing file operand." >&2
	endscript 1
elif [ "$1" = "-" ]; then
	# read input from stdin
	input='/dev/stdin'
elif [ ! -f "$1" ]; then
	[ $quiet -eq 0 ] && echo "$NAME: cannot access '$1'; No such file." >&2
	endscript 1
else
	input="$1"
fi

# language detection from extention
ext=$(echo $(basename $1) | sed 's/^.*\.\([^\.]*\)$/\1/')

case $ext in
	'java') run 'java';;
	'c') run 'c';;
	'py') run 'python';;
esac

endscript 0
